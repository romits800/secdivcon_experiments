--- |
  ; ModuleID = 'password_cm0.ll'
  target datalayout = "e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64"
  target triple = "thumbv6m--"
  
  ; Function Attrs: nounwind
  define arm_aapcscc i32 @compare_key(i32 %pub, i32 %key) #0 {
    %1 = icmp eq i32 %key, %pub
    br i1 %1, label %2, label %3
  
  ; <label>:2                                       ; preds = %0
    br label %3
  
  ; <label>:3                                       ; preds = %2, %0
    %r.0 = phi i32 [ 1, %2 ], [ 0, %0 ]
    ret i32 %r.0
  }
  
  attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m0" "target-features"="+soft-float,+strict-align,-crypto,-neon" "unsafe-fp-math"="false" "use-soft-float"="true" }
  
  !llvm.module.flags = !{!0, !1}
  !llvm.ident = !{!2}
  
  !0 = !{i32 1, !"wchar_size", i32 4}
  !1 = !{i32 1, !"min_enum_size", i32 4}
  !2 = !{!"clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)"}

...
---
name:            compare_key
alignment:       1
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: tgpr }
  - { id: 1, class: tgpr }
  - { id: 2, class: tgpr }
  - { id: 3, class: tgpr }
  - { id: 4, class: tgpr }
liveins:         
  - { reg: '%r0', virtual-reg: '%1' }
  - { reg: '%r1', virtual-reg: '%2' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    0
  adjustsStack:    false
  hasCalls:        false
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
body:             |
  bb.0 (%ir-block.0, freq 16):
    successors: %bb.1(50), %bb.2(50)
    liveins: %r0, %r1
  
    %2 = COPY %r1
    %1 = COPY %r0
    %3, %cpsr = tMOVi8 0, 14, _
    tCMPr %2, %1, 14, _, implicit-def %cpsr
    tBcc %bb.2, 1, %cpsr
    tB %bb.1, 14, _
  
  bb.1 (%ir-block.2, freq 8):
    successors: %bb.2(100)
  
    %4, %cpsr = tMOVi8 1, 14, _
  
  bb.2 (%ir-block.3, freq 16):
    liveouts: %r0
  
    %0 = PHI %3, %bb.0, %4, %bb.1
    %r0 = COPY %0
    tBX_RET 14, _, implicit %r0

...
