--- |
  ; ModuleID = 'CPRR13-1_wires_1_mips.ll'
  target datalayout = "E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64"
  target triple = "mips"
  
  ; Function Attrs: nounwind
  define i32 @_Z12CPRR13_wiresjjjjjjjjj(i32 signext %x, i32 signext %x0, i32 signext %r1_01, i32 signext %p1_01, i32 signext %r2_01, i32 signext %p2_01, i32 signext %r3_01, i32 signext %r4_01, i32 signext %Ox51) #0 {
    %1 = xor i32 %x, %x0
    %2 = mul i32 %x0, %p1_01
    %3 = xor i32 %r1_01, %2
    %4 = mul i32 %p1_01, %x0
    %5 = xor i32 %3, %4
    %6 = xor i32 %1, %p1_01
    %7 = mul i32 %x0, %6
    %8 = xor i32 %5, %7
    %9 = xor i32 %1, %p1_01
    %10 = mul i32 %9, %x0
    %11 = xor i32 %8, %10
    %12 = mul i32 %x0, %x0
    %13 = xor i32 %12, %r1_01
    %14 = mul i32 %1, %1
    %15 = xor i32 %14, %11
    %16 = mul i32 %13, %p2_01
    %17 = xor i32 %r2_01, %16
    %18 = mul i32 %p2_01, %13
    %19 = xor i32 %17, %18
    %20 = xor i32 %15, %p2_01
    %21 = mul i32 %13, %20
    %22 = xor i32 %19, %21
    %23 = xor i32 %15, %p2_01
    %24 = mul i32 %23, %13
    %25 = xor i32 %22, %24
    %26 = mul i32 %13, %13
    %27 = xor i32 %26, %r2_01
    %28 = mul i32 %15, %15
    %29 = xor i32 %28, %25
    %30 = mul i32 %27, %15
    %31 = xor i32 %r3_01, %30
    %32 = mul i32 %29, %13
    %33 = xor i32 %31, %32
    %34 = mul i32 %27, %13
    %35 = xor i32 %34, %r3_01
    %36 = mul i32 %29, %15
    %37 = xor i32 %36, %33
    %38 = mul i32 %35, %1
    %39 = xor i32 %r4_01, %38
    %40 = mul i32 %37, %x0
    %41 = xor i32 %39, %40
    %42 = mul i32 %35, %x0
    %43 = xor i32 %42, %r4_01
    %44 = mul i32 %37, %1
    %45 = xor i32 %44, %41
    %46 = xor i32 %43, %Ox51
    %47 = xor i32 %46, %45
    ret i32 %47
  }
  
  attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32,+soft-float" "unsafe-fp-math"="false" "use-soft-float"="true" }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)"}

...
---
name:            _Z12CPRR13_wiresjjjjjjjjj
alignment:       2
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: gpr32 }
  - { id: 1, class: gpr32 }
  - { id: 2, class: gpr32 }
  - { id: 3, class: gpr32 }
  - { id: 4, class: gpr32 }
  - { id: 5, class: gpr32 }
  - { id: 6, class: gpr32 }
  - { id: 7, class: gpr32 }
  - { id: 8, class: gpr32 }
  - { id: 9, class: gpr32 }
  - { id: 10, class: gpr32 }
  - { id: 11, class: gpr32 }
  - { id: 12, class: gpr32 }
  - { id: 13, class: gpr32 }
  - { id: 14, class: gpr32 }
  - { id: 15, class: gpr32 }
  - { id: 16, class: gpr32 }
  - { id: 17, class: gpr32 }
  - { id: 18, class: gpr32 }
  - { id: 19, class: gpr32 }
  - { id: 20, class: gpr32 }
  - { id: 21, class: gpr32 }
  - { id: 22, class: gpr32 }
  - { id: 23, class: gpr32 }
  - { id: 24, class: gpr32 }
  - { id: 25, class: gpr32 }
  - { id: 26, class: gpr32 }
  - { id: 27, class: gpr32 }
  - { id: 28, class: gpr32 }
  - { id: 29, class: gpr32 }
  - { id: 30, class: gpr32 }
  - { id: 31, class: gpr32 }
  - { id: 32, class: gpr32 }
  - { id: 33, class: gpr32 }
  - { id: 34, class: gpr32 }
  - { id: 35, class: gpr32 }
  - { id: 36, class: gpr32 }
  - { id: 37, class: gpr32 }
  - { id: 38, class: gpr32 }
  - { id: 39, class: gpr32 }
  - { id: 40, class: gpr32 }
  - { id: 41, class: gpr32 }
  - { id: 42, class: gpr32 }
  - { id: 43, class: gpr32 }
  - { id: 44, class: gpr32 }
  - { id: 45, class: gpr32 }
  - { id: 46, class: gpr32 }
  - { id: 47, class: gpr32 }
  - { id: 48, class: gpr32 }
  - { id: 49, class: gpr32 }
  - { id: 50, class: gpr32 }
  - { id: 51, class: gpr32 }
  - { id: 52, class: gpr32 }
  - { id: 53, class: gpr32 }
liveins:         
  - { reg: '%a0', virtual-reg: '%0' }
  - { reg: '%a1', virtual-reg: '%1' }
  - { reg: '%a2', virtual-reg: '%2' }
  - { reg: '%a3', virtual-reg: '%3' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    4
  adjustsStack:    false
  hasCalls:        false
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
fixedStack:      
  - { id: 0, offset: 32, size: 4, alignment: 8, isImmutable: true, isAliased: false }
  - { id: 1, offset: 28, size: 4, alignment: 4, isImmutable: true, isAliased: false }
  - { id: 2, offset: 24, size: 4, alignment: 8, isImmutable: true, isAliased: false }
  - { id: 3, offset: 20, size: 4, alignment: 4, isImmutable: true, isAliased: false }
  - { id: 4, offset: 16, size: 4, alignment: 8, isImmutable: true, isAliased: false }
body:             |
  bb.0 (%ir-block.0, freq 8):
    liveins: %a0, %a1, %a2, %a3
    liveouts: %v0, %v1
  
    %3 = COPY %a3
    %2 = COPY %a2
    %1 = COPY %a1
    %0 = COPY %a0
    %4 = XOR %0, %1
    %5 = XOR %4, %3
    %6 = MUL %4, %4, implicit-def dead %hi0, implicit-def dead %lo0
    %7 = MUL %5, %1, implicit-def dead %hi0, implicit-def dead %lo0
    %9 = MUL %3, %1, implicit-def dead %hi0, implicit-def dead %lo0
    %11 = MUL %1, %1, implicit-def dead %hi0, implicit-def dead %lo0
    %12 = LW %fixed-stack.3, 0, <0x48fbc40> = !{!"unison-memory-partition", i32 0} :: (load 4 from stack)
    %13 = LW %fixed-stack.4, 0, <0x48ff9d0> = !{!"unison-memory-partition", i32 1} :: (load 4 from stack, align 8)
    %14 = LW %fixed-stack.2, 0, <0x48fffd0> = !{!"unison-memory-partition", i32 2} :: (load 4 from stack, align 8)
    %15 = LW %fixed-stack.0, 0, <0x49000e0> = !{!"unison-memory-partition", i32 3} :: (load 4 from stack, align 8)
    %16 = LW %fixed-stack.1, 0, <0x49001f0> = !{!"unison-memory-partition", i32 4} :: (load 4 from stack)
    %17 = XOR %2, %9
    %18 = XOR killed %17, %9
    %19 = XOR killed %18, %7
    %20 = XOR killed %19, %7
    %21 = XOR killed %6, killed %20
    %22 = XOR %21, %12
    %23 = XOR killed %11, %2
    %24 = MUL %21, %21, implicit-def dead %hi0, implicit-def dead %lo0
    %25 = MUL %22, %23, implicit-def dead %hi0, implicit-def dead %lo0
    %27 = MUL %23, %23, implicit-def dead %hi0, implicit-def dead %lo0
    %28 = MUL %12, %23, implicit-def dead %hi0, implicit-def dead %lo0
    %30 = XOR %13, %28
    %31 = XOR killed %30, %28
    %32 = XOR killed %31, %25
    %33 = XOR killed %32, %25
    %34 = XOR killed %27, %13
    %35 = XOR killed %24, killed %33
    %36 = MUL %34, %21, implicit-def dead %hi0, implicit-def dead %lo0
    %37 = MUL %34, %23, implicit-def dead %hi0, implicit-def dead %lo0
    %38 = MUL %35, %21, implicit-def dead %hi0, implicit-def dead %lo0
    %39 = MUL %35, %23, implicit-def dead %hi0, implicit-def dead %lo0
    %40 = XOR killed %37, %14
    %41 = XOR %14, killed %36
    %42 = XOR killed %41, killed %39
    %43 = MUL %40, %4, implicit-def dead %hi0, implicit-def dead %lo0
    %44 = MUL %40, %1, implicit-def dead %hi0, implicit-def dead %lo0
    %45 = XOR killed %38, killed %42
    %46 = MUL %45, %4, implicit-def dead %hi0, implicit-def dead %lo0
    %47 = MUL %45, %1, implicit-def dead %hi0, implicit-def dead %lo0
    %48 = XOR killed %44, %16
    %49 = XOR killed %48, killed %15
    %50 = XOR %16, killed %43
    %51 = XOR killed %50, killed %47
    %52 = XOR killed %46, killed %51
    %v0 = COPY %49
    %v1 = COPY %52
    RetRA implicit %v0, implicit %v1

...
