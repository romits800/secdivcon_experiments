--- |
  ; ModuleID = 'test_mips.ll'
  target datalayout = "E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64"
  target triple = "mips"
  
  ; Function Attrs: nounwind
  define i32 @foo(i32 signext %a, i32 signext %b) #0 {
    %1 = add nsw i32 %a, %b
    ret i32 %1
  }
  
  ; Function Attrs: nounwind
  define i32 @test_enter(i32 signext %a, i32 signext %b) #0 {
    %1 = icmp eq i32 %a, 0
    br i1 %1, label %2, label %4
  
  ; <label>:2                                       ; preds = %0
    %3 = call i32 @foo(i32 signext %a, i32 signext %b) #1
    br label %10
  
  ; <label>:4                                       ; preds = %0
    %5 = icmp eq i32 %b, 0
    br i1 %5, label %6, label %8
  
  ; <label>:6                                       ; preds = %4
    %7 = call i32 @foo(i32 signext %b, i32 signext %a) #1
    br label %10
  
  ; <label>:8                                       ; preds = %4
    %9 = call i32 @foo(i32 signext %a, i32 signext %b) #1
    br label %10
  
  ; <label>:10                                      ; preds = %6, %8, %2
    %res.1 = phi i32 [ %3, %2 ], [ %7, %6 ], [ %9, %8 ]
    ret i32 %res.1
  }
  
  attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32,+soft-float" "unsafe-fp-math"="false" "use-soft-float"="true" }
  attributes #1 = { nobuiltin }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)"}

...
---
name:            foo
alignment:       2
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: gpr32 }
  - { id: 1, class: gpr32 }
  - { id: 2, class: gpr32 }
liveins:         
  - { reg: '%a0', virtual-reg: '%0' }
  - { reg: '%a1', virtual-reg: '%1' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
body:             |
  bb.0 (%ir-block.0, freq 8):
    liveins: %a0, %a1
    liveouts: %v0
  
    %1 = COPY %a1
    %0 = COPY %a0
    %2 = ADDu %0, %1
    %v0 = COPY %2
    RetRA implicit %v0

...
--- |
  ; ModuleID = 'test_mips.ll'
  target datalayout = "E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64"
  target triple = "mips"
  
  ; Function Attrs: nounwind
  define i32 @foo(i32 signext %a, i32 signext %b) #0 {
    %1 = add nsw i32 %a, %b
    ret i32 %1
  }
  
  ; Function Attrs: nounwind
  define i32 @test_enter(i32 signext %a, i32 signext %b) #0 {
    %1 = icmp eq i32 %a, 0
    br i1 %1, label %2, label %4
  
  ; <label>:2                                       ; preds = %0
    %3 = call i32 @foo(i32 signext %a, i32 signext %b) #1
    br label %10
  
  ; <label>:4                                       ; preds = %0
    %5 = icmp eq i32 %b, 0
    br i1 %5, label %6, label %8
  
  ; <label>:6                                       ; preds = %4
    %7 = call i32 @foo(i32 signext %b, i32 signext %a) #1
    br label %10
  
  ; <label>:8                                       ; preds = %4
    %9 = call i32 @foo(i32 signext %a, i32 signext %b) #1
    br label %10
  
  ; <label>:10                                      ; preds = %6, %8, %2
    %res.1 = phi i32 [ %3, %2 ], [ %7, %6 ], [ %9, %8 ]
    ret i32 %res.1
  }
  
  attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32,+soft-float" "unsafe-fp-math"="false" "use-soft-float"="true" }
  attributes #1 = { nobuiltin }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)"}

...
---
name:            test_enter
alignment:       2
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: gpr32 }
  - { id: 1, class: gpr32 }
  - { id: 2, class: gpr32 }
  - { id: 3, class: gpr32 }
  - { id: 4, class: gpr32 }
  - { id: 5, class: gpr32 }
  - { id: 6, class: gpr32 }
  - { id: 7, class: gpr32 }
  - { id: 8, class: gpr32 }
  - { id: 9, class: gpr32 }
  - { id: 10, class: gpr32 }
  - { id: 11, class: gpr32 }
  - { id: 12, class: gpr32 }
  - { id: 13, class: gpr32 }
  - { id: 14, class: gpr32 }
liveins:         
  - { reg: '%a0', virtual-reg: '%4' }
  - { reg: '%a1', virtual-reg: '%5' }
  - { reg: '%t9' }
  - { reg: '%v0' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        true
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
body:             |
  bb.0 (%ir-block.0, freq 34):
    successors: %bb.1(37), %bb.2(62)
    liveins: %a0, %a1, %t9, %v0
  
    %6 = ADDu %v0, %t9
    %5 = COPY %a1
    %4 = COPY %a0
    BNE %4, %zero, %bb.2, implicit-def dead %at
    B %bb.1, implicit-def dead %at
  
  bb.1 (%ir-block.2, freq 12):
    successors: %bb.5(100)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %11 = LW %6, target-flags(<unknown>) @foo, <0x42b55d0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @foo)
    %a0 = COPY %4
    %a1 = COPY %5
    %gp = COPY %6
    %t9 = COPY %11
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %12 = COPY %v0
    %0 = COPY %12
    B %bb.5, implicit-def dead %at
  
  bb.2 (%ir-block.4, freq 21):
    successors: %bb.3(37), %bb.4(62)
  
    BNE %5, %zero, %bb.4, implicit-def dead %at
    B %bb.3, implicit-def dead %at
  
  bb.3 (%ir-block.6, freq 8):
    successors: %bb.5(100)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %9 = LW %6, target-flags(<unknown>) @foo, <0x42b55d0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @foo)
    %a0 = COPY %5
    %a1 = COPY %4
    %gp = COPY %6
    %t9 = COPY %9
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %10 = COPY %v0
    %1 = COPY %10
    B %bb.5, implicit-def dead %at
  
  bb.4 (%ir-block.8, freq 13):
    successors: %bb.5(100)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %7 = LW %6, target-flags(<unknown>) @foo, <0x42b55d0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @foo)
    %a0 = COPY %4
    %a1 = COPY %5
    %gp = COPY %6
    %t9 = COPY %7
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %8 = COPY %v0
    %2 = COPY %8
  
  bb.5 (%ir-block.10, freq 34):
    liveouts: %v0
  
    %3 = PHI %2, %bb.4, %1, %bb.3, %0, %bb.1
    %v0 = COPY %3
    RetRA implicit %v0

...
