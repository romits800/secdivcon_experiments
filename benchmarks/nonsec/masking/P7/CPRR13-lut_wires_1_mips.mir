--- |
  ; ModuleID = 'CPRR13-lut_wires_1_mips.ll'
  target datalayout = "E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64"
  target triple = "mips"
  
  ; Function Attrs: nounwind
  define i32 @_Z18CPRR13_lut_wires_1iiiiiiiii(i32 signext %x, i32 signext %x0, i32 signext %r1_01, i32 signext %p1_01, i32 signext %r2_01, i32 signext %p2_01, i32 signext %r3_01, i32 signext %r4_01, i32 signext %Ox51) #0 {
    %1 = xor i32 %x, %x0
    %2 = xor i32 %x0, %p1_01
    %3 = xor i32 %r1_01, %2
    %4 = xor i32 %1, %p1_01
    %5 = xor i32 %3, %4
    %6 = xor i32 %x0, %p1_01
    %7 = xor i32 %6, %1
    %8 = xor i32 %5, %7
    %9 = xor i32 %8, %p1_01
    %10 = xor i32 %x0, %r1_01
    %11 = xor i32 %1, %9
    %12 = xor i32 %10, %p2_01
    %13 = xor i32 %r2_01, %12
    %14 = xor i32 %11, %p2_01
    %15 = xor i32 %13, %14
    %16 = xor i32 %10, %p2_01
    %17 = xor i32 %16, %11
    %18 = xor i32 %15, %17
    %19 = xor i32 %18, %p2_01
    %20 = xor i32 %10, %r2_01
    %21 = xor i32 %11, %19
    %22 = mul nsw i32 %20, %11
    %23 = xor i32 %r3_01, %22
    %24 = mul nsw i32 %21, %10
    %25 = xor i32 %23, %24
    %26 = mul nsw i32 %20, %10
    %27 = xor i32 %26, %r3_01
    %28 = mul nsw i32 %21, %11
    %29 = xor i32 %28, %25
    %30 = mul nsw i32 %27, %1
    %31 = xor i32 %r4_01, %30
    %32 = mul nsw i32 %29, %x0
    %33 = xor i32 %31, %32
    %34 = mul nsw i32 %27, %x0
    %35 = xor i32 %34, %r4_01
    %36 = mul nsw i32 %29, %1
    %37 = xor i32 %36, %33
    %38 = xor i32 %35, %Ox51
    %39 = xor i32 %38, %37
    ret i32 %39
  }
  
  attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32,+soft-float" "unsafe-fp-math"="false" "use-soft-float"="true" }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)"}

...
---
name:            _Z18CPRR13_lut_wires_1iiiiiiiii
alignment:       2
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: gpr32 }
  - { id: 1, class: gpr32 }
  - { id: 2, class: gpr32 }
  - { id: 3, class: gpr32 }
  - { id: 4, class: gpr32 }
  - { id: 5, class: gpr32 }
  - { id: 6, class: gpr32 }
  - { id: 7, class: gpr32 }
  - { id: 8, class: gpr32 }
  - { id: 9, class: gpr32 }
  - { id: 10, class: gpr32 }
  - { id: 11, class: gpr32 }
  - { id: 12, class: gpr32 }
  - { id: 13, class: gpr32 }
  - { id: 14, class: gpr32 }
  - { id: 15, class: gpr32 }
  - { id: 16, class: gpr32 }
  - { id: 17, class: gpr32 }
  - { id: 18, class: gpr32 }
  - { id: 19, class: gpr32 }
  - { id: 20, class: gpr32 }
  - { id: 21, class: gpr32 }
  - { id: 22, class: gpr32 }
  - { id: 23, class: gpr32 }
  - { id: 24, class: gpr32 }
  - { id: 25, class: gpr32 }
  - { id: 26, class: gpr32 }
  - { id: 27, class: gpr32 }
  - { id: 28, class: gpr32 }
  - { id: 29, class: gpr32 }
  - { id: 30, class: gpr32 }
  - { id: 31, class: gpr32 }
  - { id: 32, class: gpr32 }
  - { id: 33, class: gpr32 }
  - { id: 34, class: gpr32 }
  - { id: 35, class: gpr32 }
  - { id: 36, class: gpr32 }
  - { id: 37, class: gpr32 }
  - { id: 38, class: gpr32 }
  - { id: 39, class: gpr32 }
  - { id: 40, class: gpr32 }
  - { id: 41, class: gpr32 }
  - { id: 42, class: gpr32 }
  - { id: 43, class: gpr32 }
  - { id: 44, class: gpr32 }
  - { id: 45, class: gpr32 }
liveins:         
  - { reg: '%a0', virtual-reg: '%0' }
  - { reg: '%a1', virtual-reg: '%1' }
  - { reg: '%a2', virtual-reg: '%2' }
  - { reg: '%a3', virtual-reg: '%3' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    4
  adjustsStack:    false
  hasCalls:        false
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
fixedStack:      
  - { id: 0, offset: 32, size: 4, alignment: 8, isImmutable: true, isAliased: false }
  - { id: 1, offset: 28, size: 4, alignment: 4, isImmutable: true, isAliased: false }
  - { id: 2, offset: 24, size: 4, alignment: 8, isImmutable: true, isAliased: false }
  - { id: 3, offset: 20, size: 4, alignment: 4, isImmutable: true, isAliased: false }
  - { id: 4, offset: 16, size: 4, alignment: 8, isImmutable: true, isAliased: false }
body:             |
  bb.0 (%ir-block.0, freq 8):
    liveins: %a0, %a1, %a2, %a3
    liveouts: %v0, %v1
  
    %3 = COPY %a3
    %2 = COPY %a2
    %1 = COPY %a1
    %0 = COPY %a0
    %4 = XOR %0, %1
    %5 = XOR %1, %3
    %6 = XOR %5, %4
    %7 = XOR %4, %3
    %8 = XOR %2, %5
    %9 = XOR killed %8, killed %7
    %10 = XOR killed %9, killed %6
    %11 = XOR killed %10, %3
    %12 = XOR %4, killed %11
    %13 = XOR %1, %2
    %14 = LW %fixed-stack.3, 0, <0x47a1400> = !{!"unison-memory-partition", i32 0} :: (load 4 from stack)
    %15 = XOR %13, %14
    %16 = LW %fixed-stack.4, 0, <0x47a5190> = !{!"unison-memory-partition", i32 1} :: (load 4 from stack, align 8)
    %17 = XOR %15, %12
    %18 = XOR %12, %14
    %19 = XOR %16, %15
    %20 = XOR %13, %16
    %21 = MUL %20, %13, implicit-def dead %hi0, implicit-def dead %lo0
    %22 = LW %fixed-stack.2, 0, <0x47a5790> = !{!"unison-memory-partition", i32 2} :: (load 4 from stack, align 8)
    %23 = LW %fixed-stack.0, 0, <0x47a58a0> = !{!"unison-memory-partition", i32 3} :: (load 4 from stack, align 8)
    %24 = LW %fixed-stack.1, 0, <0x47a59b0> = !{!"unison-memory-partition", i32 4} :: (load 4 from stack)
    %25 = XOR killed %19, killed %18
    %26 = XOR killed %25, killed %17
    %27 = XOR killed %26, %14
    %28 = XOR %12, killed %27
    %29 = MUL %28, %12, implicit-def dead %hi0, implicit-def dead %lo0
    %30 = MUL %28, %13, implicit-def dead %hi0, implicit-def dead %lo0
    %31 = MUL %20, %12, implicit-def dead %hi0, implicit-def dead %lo0
    %32 = XOR %22, killed %31
    %33 = XOR killed %21, %22
    %34 = XOR killed %32, killed %30
    %35 = MUL %33, %4, implicit-def dead %hi0, implicit-def dead %lo0
    %36 = MUL %33, %1, implicit-def dead %hi0, implicit-def dead %lo0
    %37 = XOR killed %29, killed %34
    %38 = MUL %37, %4, implicit-def dead %hi0, implicit-def dead %lo0
    %39 = MUL %37, %1, implicit-def dead %hi0, implicit-def dead %lo0
    %40 = XOR killed %36, %24
    %41 = XOR killed %40, killed %23
    %42 = XOR %24, killed %35
    %43 = XOR killed %42, killed %39
    %44 = XOR killed %38, killed %43
    %v0 = COPY %41
    %v1 = COPY %44
    RetRA implicit %v0, implicit %v1

...
